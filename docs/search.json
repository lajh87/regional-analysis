[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Regional Analysis",
    "section": "",
    "text": "1 Preface\nThis is a quarto book."
  },
  {
    "objectID": "lossiemouth.html",
    "href": "lossiemouth.html",
    "title": "2  Lossiemouth",
    "section": "",
    "text": "## Geocode the Location\nlibrary(tidygeocoder)\nlnglat &lt;- dplyr::tibble(location = \"RAF Lossiemouth\") |&gt;\n  geocode(location, method = \"osm\")\n\nPassing 1 address to the Nominatim single address geocoder\n\n\nQuery completed in: 1 seconds\n\n\n\n## Plot on a Map\nlibrary(leaflet)\nleaflet(lnglat) |&gt;\n  addTiles() |&gt;\n  addPopups(lng = ~long, lat = ~lat, popup = \"RAF Lossiemouth\")\n\n\n\n\n\n\n## Create a Circle\nspdf &lt;- sf::st_as_sf(lnglat, coords = c(\"long\", \"lat\"), crs = 4326)\nspdf |&gt;\n  sf::st_transform(27700) |&gt;\n  sf::st_buffer(5e3) |&gt;\n  sf::st_transform(4326) |&gt;\n  leaflet::leaflet() |&gt; \n  leaflet::addTiles() |&gt;\n  leaflet::addPolygons()\n\n\n\n\n\n\n# Extract the Military Sites within a Bounding Box\nbbox &lt;- spdf |&gt;\n  sf::st_transform(27700) |&gt;\n  sf::st_buffer(5e3) |&gt;\n  sf::st_transform(4326) |&gt;\n  sf::st_bbox() |&gt;\n  as.numeric()\n\nlanduse_military &lt;- osmdata::opq(bbox = bbox) |&gt;  \n  osmdata::add_osm_feature(key = \"landuse\", value = \"military\") |&gt;\n  osmdata::osmdata_sf()\n\nlanduse_military$osm_polygons |&gt;\n  leaflet::leaflet() |&gt;\n  leaflet::addTiles() |&gt;\n  leaflet::addPolygons(label = ~name) \n\n\n\n\n\n```"
  },
  {
    "objectID": "comparators.html",
    "href": "comparators.html",
    "title": "3  Comparators",
    "section": "",
    "text": "Lossiemouth is a coastal town in Scotland between the cities of Inverness and Aberdeen\nSome other coastal towns between Inverness and Aberdeen include:\n\ntown_geo &lt;- paste(\n  c(\"Lossiemouth\", \"Dalcross\", \"Nairn\", \"Forres\", \"Kinloss\", \"Buckie\", \"Cullen\",\n  \"Portsoy\", \"Banff\", \"Crovie\", \"Fraserburgh\", \"Rattray\", \"Peterhead\",\"Boddam\", \n  \"Cruden Bay\", \"Newburgh\", \"Balmedie\"),\n  \", Scotland\", \n  sep = \"\") |&gt; \n  tidygeocoder::geo()\n\nPassing 17 addresses to the Nominatim single address geocoder\n\n\nQuery completed in: 17.8 seconds\n\n\n\ntown_geo_sf &lt;- sf::st_as_sf(town_geo, coords = c(\"long\", \"lat\"), crs = 4326)\n\nleaflet::leaflet(town_geo_sf) |&gt;\n  leaflet::addTiles() |&gt;\n  leaflet::addMarkers()\n\n\n\n\n\n\ntown_geo_sf_buffer &lt;- town_geo_sf |&gt;\n  sf::st_transform(27700) |&gt;\n  sf::st_buffer(dist = 2.5e3) |&gt;\n  sf::st_transform(4326) \n\nleaflet::leaflet(town_geo_sf_buffer)|&gt;\n  leaflet::addTiles() |&gt;\n  leaflet::addPolygons()\n\n\n\n\n\n\ndb &lt;- DBI::dbConnect(\n    RPostgres::Postgres(),\n    db = \"census\", \n    host = \"localhost\", \n    port = 5432,\n    user = \"postgres\", \n    password = Sys.getenv(\"postgre_pw\")\n  )\n\ntown_geo_sf_buffer &lt;- town_geo_sf |&gt;\n  sf::st_transform(27700) |&gt;\n  sf::st_buffer(dist = 2.5e3)\n\nbbox_df &lt;- seq_along(town_geo_sf_buffer$geometry) |&gt; \n  purrr::map(~{\n  town_geo_sf_buffer$geometry[.x] |&gt;\n    sf::st_bbox()\n}) |&gt;\n  dplyr::bind_rows() |&gt;\n  dplyr::mutate(address = town_geo_sf_buffer$address)\n\n\nquery_bounding_box &lt;- function(bbox, tbl = \"ew_msoa_2021\", srid = 27700){\n  \n  glue::glue(\"SELECT * FROM {tbl}\n    WHERE  geometry \n    && \n      ST_MakeEnvelope (\n        {bbox[1]}, {bbox[2]}, \n        {bbox[3]}, {bbox[4]}, \n        {srid})\")\n}\n\n\noa_f &lt;- 1:nrow(bbox_df) |&gt;\n  purrr::map(~{\n    sf::st_read(db, query = query_bounding_box(\n      bbox_df[.x,], \n      tb = \"scotland_oac_2011\")\n      ) |&gt;\n      dplyr::mutate(address = bbox_df$address[.x])\n    }) |&gt;\n  dplyr::bind_rows()\n\noa_f |&gt;\n  sf::st_transform(4326) |&gt;\n  leaflet::leaflet() |&gt;\n  leaflet::addTiles() |&gt;\n  leaflet::addPolygons()\n\n\n\n\n\n\ngva &lt;- oa_f |&gt;\n  dplyr::left_join(\n    db |&gt;\n    dplyr::tbl(\"oa11_lsoa11_msoa11_lad_2017\" ) |&gt;\n    dplyr::select(OA11CD, LSOA11CD) |&gt;\n    dplyr::collect(),\n    by = c(\"code\" = \"OA11CD\")\n  ) |&gt;\n  dplyr::left_join(\n    readxl::read_xlsx(\"data-raw/uksmallareagvaestimates1998to2021.xlsx\", \n                  sheet = 4, skip = 1),\n    by = c(\"LSOA11CD\" = \"DZ code\")\n  ) |&gt;\n  dplyr::as_tibble() |&gt;\n  dplyr::select(address, LSOA11CD, `1998`:`2021`) |&gt;\n  dplyr::distinct() |&gt;\n  tidyr::pivot_longer(cols = -c(1:2))\n\nlibrary(ggplot2)\ng &lt;- gva |&gt;\n  dplyr::group_by(address, name) |&gt;\n  dplyr::summarise(mean = mean(value)) |&gt;\n  ggplot() + geom_line(aes(name, mean, colour = address, group = address)) \n\n`summarise()` has grouped output by 'address'. You can override using the\n`.groups` argument.\n\nplotly::ggplotly(g)\n\n\n\n\nDBI::dbDisconnect(db)"
  }
]